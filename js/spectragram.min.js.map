{"version":3,"sources":["spectragram.min.js"],"names":["Object","create","obj","F","prototype","$","window","document","undefined","Instagram","init","options","elem","self","this","$elem","api","accessData","fn","spectragram","extend","fetch","done","userID","display","getData","clientID","accessToken","results","getRecentMedia","data","query","max","error","length","id","ajax","getUrl","type","dataType","cache","url","append","size","wrapEachWith","notFoundMsg","i","setSize","images","standard_resolution","titleIMG","low_resolution","caption","text","html","link","method","complete","call","instagram","jQuery"],"mappings":"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","file":"spectragram.min.js","sourcesContent":["/*!\n * jQuery - Spectragram by Adrian Quevedo\n * http://adrianquevedo.com/  - http://lab.adrianquevedo.com/ - http://elnucleo.com.co/\n *\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * You are free to use this plugin in commercial projects as long as the copyright header is left intact.\n *\n * This plugin uses the Instagram(tm) API and is not endorsed or certified by Instagram or Burbn, inc. \n * All Instagram(tm) logos and trademarks displayed on this plugin are property of Burbn, Inc.\n *\n * Date: Thu Jul 15 14:05:02 2012 -0500\n */\n \n// Utility for older browsers\nif (typeof Object.create !== 'function') {\n    Object.create = function (obj) {\n        function F() {};\n        F.prototype = obj;\n        return new F();\n    };\n}\n\n(function ($, window, document, undefined) {\n\t\n\tvar Instagram = {\n\n        //Initialize function\n        init: function (options, elem) {\n            var self = this;\n\n            self.elem = elem;\n            self.$elem = $(elem);\n\n            self.api = 'https://api.instagram.com/v1',\n\t\t\t\n\t\t\tself.accessData = $.fn.spectragram.accessData,\n\t\t\t\t\t\t\n\t\t\tself.options = $.extend({}, $.fn.spectragram.options, options);\n        },\n\n        //Users\t\t\n\t\t//Get the most recent media published by a user.\n        getRecentMedia: function ( userID ) {\n\t\t\tvar self = this,\n\t\t\t\tgetData = '/users/' + userID + '/media/recent/?' + self.accessData.clientID + '&access_token='+ self.accessData.accessToken +'';\n\t\t\t\t\n                self.fetch(getData).done(function ( results ) {\n                    self.display(results);\n                });\n\t\t},\n\t\t\n\t\t//Search for a user by name.\n        getUserFeed: function () {\n\t\t\tvar self = this,\n\t\t\t\tgetData = '/users/search?q=' + self.options.query + '&count=' + self.options.max + '&access_token='+ self.accessData.accessToken + '';\n\n\t\t\t\tself.fetch(getData).done(function ( results ) {\n\t\t\t\t\tif(results.data.length){\n\t\t\t\t\t\tself.getRecentMedia(results.data[0].id);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$.error('Spectagram.js - Error: the username ' + self.options.query + ' does not exist.');\n\t\t\t\t\t};\n                });        \n\t\t},\n\n        //Media\n        //Get a list of what media is most popular at the moment\n        getPopular: function () {\n            var self = this,\n                getData = '/media/popular?client_id=' + self.accessData.clientID + '&access_token='+ self.accessData.accessToken + '';\n                \n                self.fetch(getData).done(function ( results ) {\n                    self.display(results);\n                });\n        },\n\n        //Tags\n        //Get a list of recently tagged media\n        getRecentTagged: function () {\n            var self = this,\n                getData = '/tags/' + self.options.query + '/media/recent?client_id=' + self.accessData.clientID + '&access_token='+ self.accessData.accessToken + '';\n                \n                self.fetch(getData).done(function ( results ) {                    \n\t\t\t\t\tif(results.data.length){\n\t\t\t\t\t\tself.display(results);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$.error('Spectagram.js - Error: the tag ' + self.options.query + ' does not have results.');\n\t\t\t\t\t};\n                });\n        },\n\n        fetch: function (getData) {\n            var self = this,\n                getUrl = self.api + getData;\n\n            return $.ajax({\n                type: \"GET\",\n                dataType: \"jsonp\",\n                cache: false,\n                url: getUrl\n            });\n        },\n\n        display: function (results) {\n            var self = this,\n                setSize = self.options.size,\n                size, max = (self.options.max >= results.data.length) ? results.data.length : self.options.max;\n\n            if (results.data.length === 0) {\n                self.$elem.append($(self.options.wrapEachWith).append(self.options.notFoundMsg));\n            }\n            else {\n\t\t\t\tfor (var i = 0; i < max; i++) {\n\t\t\t\t\tif (setSize == \"small\") {\n\t\t\t\t\t\tsize = results.data[i].images.thumbnail.url;\n\t\t\t\t\t}\n\t\t\t\t\telse if (setSize == \"medium\") {\n\t\t\t\t\t\tsize = results.data[i].images.low_resolution.url;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsize = results.data[i].images.standard_resolution.url;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar titleIMG;\n\t\t\t\t\t// Skip if the caption is empty.\n\t\t\t\t\tif ( results.data[i].caption != null ) {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t* 1. First it creates a dummy element <span/>\n\t\t\t\t\t\t* 2. And then puts the caption inside the element created previously.\n\t\t\t\t\t\t* 3. Extracts the html caption (this allows html codes to be included).\n\t\t\t\t\t\t* 4. Lastly, the most important part, create the Title attribute using double quotes\n\t\t\t\t\t\t* to enclose the text. This fixes the bug when the caption retrieved from Instagram \n\t\t\t\t\t\t* includes single quotes which breaks the Title attribute.\n\t\t\t\t\t\t*/\n\t\t\t\t\t\ttitleIMG = 'title=\"' + $('<span/>').text(results.data[i].caption.text).html() +'\"';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now concatenate the titleIMG generated.\n\t\t\t\t\tself.$elem.append($(self.options.wrapEachWith).append(\"<a \" + titleIMG + \" target='_blank' href='\" + results.data[i].link + \"'><img src='\" + size + \"'></img></a>\"));\n\t\t\t\t}\n            }\n\t\t\t\n\t\t\tif (typeof self.options.complete === 'function') {\n\t\t\t\tself.options.complete.call(self);\n\t\t\t}\n        }\n    };\n\t\n\tjQuery.fn.spectragram = function ( method, options ) {\n\t\t\n\t\tif(jQuery.fn.spectragram.accessData.clientID){\n\t\t\n\t\t\tthis.each( function () {\n\t\t\t\tvar instagram = Object.create( Instagram );\n\t\t\t\tinstagram.init( options, this );\t\t\n\t\t\t\tif( instagram[method] ) { \n\t\t\t\t\treturn instagram[method]( this );\n\t\t\t\t}else{ \n\t\t\t\t\t$.error( 'Method ' + method + ' does not exist on jQuery.spectragram' );\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t\t}else{\n\t\t\t$.error( 'You must define an accessToken and a clientID on jQuery.spectragram' );\n\t\t}\n    };\n\n    //Plugin Default Options\n    jQuery.fn.spectragram.options = {\n\t\tmax: 10,\n\t\tquery: 'coffee',\n\t\tsize: 'medium',\n\t\twrapEachWith: '<li></li>',\n\t\tcomplete : null \t\t\n    };\n\t\n\t//Instagram Access Data\n\tjQuery.fn.spectragram.accessData = {\n        accessToken: null,\n\t\tclientID: null        \n    };\n\n})(jQuery, window, document);"]}